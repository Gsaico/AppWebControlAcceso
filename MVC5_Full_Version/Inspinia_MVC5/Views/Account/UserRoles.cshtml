@model Inspinia_MVC5.Models.SelectUserRolesViewModel
@{
    ViewBag.Title = "User Roles";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Usuarios</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Listado", "Index")
            </li>
            <li class="active">
                <strong>Roles del Usuario</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            @Html.ActionLink("Regresar a Listado de Colaboradores", "Index", null, new { @class = "btn btn-primary", id = "btnRegresarListadoUsuarios", name = "btnRegresarListadoUsuarios" })
        </div>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Roles del Usuario @Html.DisplayFor(model => model.UserName)</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        @*<a class="dropdown-toggle" data-toggle="dropdown" href="#">
                <i class="fa fa-wrench"></i>
            </a>
            <ul class="dropdown-menu dropdown-user">
                <li>
                    <a href="#">Config option 1</a>
                </li>
                <li>
                    <a href="#">Config option 2</a>
                </li>
            </ul>*@
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("UserRoles", "Account", FormMethod.Post, new { encType = "multipart/form-data", name = "myform" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true)
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.HiddenFor(model => model.UserName)
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>
                                                Estado
                                            </th>

                                            <th>
                                                Rol
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>

                                        @Html.EditorFor(model => model.Roles)
                                </table>
                            </div>
                                <br />
                                <hr />
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" name="btnGuardar" />
                                        @Html.ActionLink("Regresar a Listado de Usuarios", "Index", null, new { @class = "btn btn-white", id = "btnRegresarListadoUsuariosx", name = "btnRegresarListadoUsuariosx" })


                                    </div>
                                </div>
                            </div>

                    }

                </div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/peity")
    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript">
            $(document).ready(function () {

                $('.i-checks').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });

                $("span.pie").peity("pie", {
                    fill: ['#1ab394', '#d7d7d7', '#ffffff']
                })

                $(".line").peity("line", {
                    fill: '#1ab394',
                    stroke: '#169c81',
                })

                $(".bar").peity("bar", {
                    fill: ["#1ab394", "#d7d7d7"]
                })

                $(".bar_dashboard").peity("bar", {
                    fill: ["#1ab394", "#d7d7d7"],
                    width: 100
                })

                var updatingChart = $(".updating-chart").peity("line", { fill: '#1ab394', stroke: '#169c81', width: 64 })

                setInterval(function () {
                    var random = Math.round(Math.random() * 10)
                    var values = updatingChart.text().split(",")
                    values.shift()
                    values.push(random)

                    updatingChart
                        .text(values.join(","))
                        .change()
                }, 1000);

            });
    </script>
}
